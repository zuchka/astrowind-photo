---
import Button from '~/components/ui/Button.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { ArtworkDetailsSingle as Props } from '~/types';

const {
  artworkDetails = {},
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <div class="flex items-stretch justify-center">
    <div class="grid grid-cols-3 gap-4 dark:text-white sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3">
      {
        artworkDetails && (
          <div class="col-span-3 mx-auto flex w-full sm:col-span-1 md:col-span-1 lg:col-span-1 xl:col-span-1">
            {artworkDetails.description && (
              <div class="rounded-lg backdrop-blur border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900 shadow px-6 py-8 flex w-full max-w-sm flex-col justify-between text-center">
                <div class="px-2 py-0">
                  {artworkDetails.title && (
                    <h3 class="avenir-heavy text-xl font-semibold uppercase leading-6 tracking-wider mb-2">{artworkDetails.title}</h3>
                  )}
                  {artworkDetails.artist && <p class="avenir-medium sm:text-lg text-gray-600 dark:text-slate-400">{artworkDetails.artist}</p>}
                  <div class="my-8 flex flex-col">
                    {artworkDetails.date && <p class="avenir-book text-sm text-gray-600 dark:text-slate-400 text-right">{artworkDetails.date}</p>}
                    {artworkDetails.material && <p class="avenir-book text-sm text-gray-600 dark:text-slate-400 text-right" set:html={artworkDetails.material}></p>}
                    {artworkDetails.copyright && <p class="avenir-book text-sm text-gray-600 dark:text-slate-400 text-right">{artworkDetails.copyright}</p>}
                  </div>
                  <div class="my-8">
                    <p class="avenir-book text-base leading-6 text-gray-600 dark:text-slate-400 text-left" set:html={artworkDetails.description}></p>
                  </div>
                </div>
                {artworkDetails.callToAction && (
                  <div class={`flex justify-center space-x-4`}>
                    <Button variant="secondary" text="Return to Gallery" href="/mountains/landing" />
                    {typeof artworkDetails.callToAction === 'string' ? (
                      <Fragment set:html={artworkDetails.callToAction} />
                    ) : (
                      artworkDetails.callToAction &&
                      artworkDetails.callToAction.href && <Button {...artworkDetails.callToAction} />
                    )}
                  </div>
                )}
              </div>
            )}
          </div>
        )
      }
    </div>
  </div>
</WidgetWrapper>
